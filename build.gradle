plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2" // 아스키 독 플러그인
}

group = 'com.mate'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'mysql:mysql-connector-java:8.0.28'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// sockjs
	implementation 'org.webjars:sockjs-client:1.5.1'

	// stomp
	implementation 'org.webjars:stomp-websocket:2.3.4'

	// gson
	implementation 'com.google.code.gson:gson:2.9.0'

	// valid
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

	// aws-s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// jcode (thumbnail)
	implementation 'org.jcodec:jcodec-javase:0.2.5'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// mockmvc
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// test - junit5
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	// Spring Rest Docs에서 mockMvc를 사용해 스니펫 조각들을 뽑아낸다는 의미.
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	compileOnly 'org.projectlombok:lombok'
	// h2
	runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok' // Spring Rest Docs로 인한 추가
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	// 테스트의 아웃풋이 위에서 설정한 스니펫 디렉토리로 출력(저장)된다.
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	dependsOn test // 테스트 이후 작동 설정
	configurations 'asciidoctorExtensions' // 위 설정한 configuration 적용
	inputs.dir snippetsDir // snippetsDir를 입력으로

	baseDirFollowsSourceFile() // 특정 파일 인클루드 시, 경로를 베이스 디렉토리로 맞춰줌.
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}
//copyDocument
//bootJar {
//	dependsOn asciidoctor
//	from ("${asciidoctor.outputDir}/html5") {
//		into 'static/docs'
//	}
//}